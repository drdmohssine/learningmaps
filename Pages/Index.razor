@page "/"
@using LearningMaps.Data


@inject NavigationManager Navigation
@inject HttpClient Http
@inject MapsData MapsSvs

<PageTitle>Learning Maps | Explore New Topics and Expand Your Knowledge</PageTitle>
@if (MapsSvs.FiltredMapsData is not null)
{
    
    <HeadContent>
        <meta property="og:url" content="@(Navigation.Uri)" />
        <meta property="og:description" content="Explore new areas of knowledge with our learning maps. Our website offers a wide range of educational topics, presented in an intuitive and visually appealing format. Whether you're a student or lifelong learner, our maps provide a unique way to enhance your understanding of complex subjects. With engaging content and easy navigation, our learning maps make it easy to discover and explore new ideas. Start your journey of discovery today and unlock your full potential with our learning maps." />
   
    </HeadContent>

}

<div class="overflow-auto d-flex flex-row justify-content-evenly flex-wrap bd-highlight mb-3">
    @if (MapsSvs.MapsDatas is not null)
    {
        <MapsTemplate Items="@(MapsSvs.FiltredMapsData)">
        <MapTemplate Context="map">
                <div class="card me-2 mb-2 text-center shadow-sm " style="width:400px; background-image: linear-gradient(to top, #965a3e,#b97c7c,#cfa6b5,#e1d3e1,#ffffff);">
                    <div class="card-header">
                        @(map.title)
                    </div>

             <div class="card-img-top">
                       
                        <img src="@(map.images[0].thumbnail)" @onclick="() => NavigateToMap(map)" class="card-img-top " style="height:255px">

             </div>
                   <div class="card-body text-white" >
                        <p class="card-text">@(map.description)</p>

                   


                </div>

                <div class="card-footer">
                        <Button Class="shadow text-light mb-1" Style="background-color:darkslategray;width:170px;font-size:small;font-weight:bold;"
                            Type="ButtonType.Link" To="https://snotesapp.github.io/snoteseditor/" Target="Target.Blank">
                            Open sNotes
                        </Button>

                        <Button Class="shadow text-white mb-1" Style="background-color:darkslategray;width:170px;font-size:small;font-weight:bold;"
                            Type="ButtonType.Link" To="@map.down_file">
                            Download sNotes Map
                        </Button>

                </div>
            </div>
           </MapTemplate>
    </MapsTemplate>

    }
    
    
    
</div>


@code{


    protected override async Task OnInitializedAsync()
    {

        if(MapsSvs.MapsDatas is null)
        {
            MapsSvs.MapsDatas = await Http.GetFromJsonAsync<MapData[]>("sample-data/img_dt.json");
            MapsSvs.FiltredMapsData = new List<MapData>(MapsSvs.MapsDatas.OrderByDescending(m => m.map_ID)).ToList();

        }

        MapsSvs.OnChange += StateHasChanged;
    }


    private void NavigateToMap(MapData map)
    {
        //MapsSvs.SelectedMap = map;
        // Navigation.NavigateTo($"/learningmaps/map/{map.map_ID}");

       
        Navigation.NavigateTo(Navigation.BaseUri + $"map?id={map.map_ID}");
    }


    public void Dispose()
    {
        MapsSvs.OnChange -= StateHasChanged;
      
    }
}